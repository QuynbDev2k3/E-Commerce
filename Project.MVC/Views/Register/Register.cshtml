@model Project.DbManagement.Entity.UserEntity

@{
    ViewData["Title"] = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="contact__form container d-flex justify-content-center align-items-center mt-5" style="min-height: 100vh;">
    <div class="card shadow-lg p-4" style="max-width: 1000px; width: 100%; border-radius: 10px;">
        <div class="text-center mb-3">
            <h2>Đăng ký</h2>
        </div>
        <br/>

        @if (TempData["ErrRegMs"] != null && !String.IsNullOrWhiteSpace(TempData["ErrRegMs"].ToString()))
        {
            <div class="alert alert-danger text-center">
                @TempData["ErrRegMs"]
            </div>
        }

        @if (TempData["SuccessRegMs"] != null && !String.IsNullOrWhiteSpace(TempData["SuccessRegMs"].ToString()))
        {
            <div class="alert alert-success text-center">
                @TempData["SuccessRegMs"]
            </div>
        }

        <form asp-controller="Register" asp-action="Register" method="post">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label><i class="fa fa-user"></i> Tên <span class="text-danger">*</span></label>
                        <input asp-for="Name" name="Name" placeholder="Nhập tên" />
                        <p class="error-message text-center" style="color: red; font-size: 13px;"></p>
                    </div>

                    <div class="form-group">
                        <label><i class="fa fa-phone"></i> Số điện thoại</label>
                        <input asp-for="PhoneNumber" name="PhoneNumber" placeholder="Nhập số điện thoại" />
                        <p class="error-message text-center" style="color: red; font-size: 13px;"></p>
                    </div>

                    <div class="form-group">
                        <label><i class="fa fa-envelope"></i> Email</label>
                        <input asp-for="Email" name="Email" placeholder="Nhập email" />
                        <p class="error-message text-center" style="color: red; font-size: 13px;"></p>
                    </div>

                    <div class="form-group">
                        <label><i class="fa fa-map-marker"></i> Địa chỉ</label>
                        <input asp-for="Address" name="Address" placeholder="Nhập địa chỉ" />
                        <p class="error-message text-center" style="color: red; font-size: 13px;"></p>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label><i class="fa fa-user"></i> Tên đăng nhập<span class="text-danger">*</span></label>
                        <input asp-for="Username" name="Username" placeholder="Nhập Tên đăng nhập" />
                        <p class="error-message text-center" style="color: red; font-size: 13px;"></p>
                    </div>

                    <div class="form-group">
                        <label><i class="fa fa-lock"></i> Mật khẩu <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <input class="form-control" asp-for="Password" name="Password" type="password" placeholder="Nhập mật khẩu" id="passwordField" />
                            <button type="button" class="btn btn-outline-secondary toggle-password" data-target="#passwordField">
                                <i class="fa fa-eye"></i>
                            </button>
                        </div>
                        <br/>
                        <p class="error-message text-center" style="color: red; font-size: 13px;"></p>
                    </div>

                    <div class="form-group">
                        <label><i class="fa fa-lock"></i> Nhập lại mật khẩu <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <input class="form-control" type="password" name="ConfirmPassword" placeholder="Nhập lại mật khẩu" id="confirmPasswordField" />
                            <button type="button" class="btn btn-outline-secondary toggle-password" data-target="#confirmPasswordField">
                                <i class="fa fa-eye"></i>
                            </button>
                        </div>
                        <br/>
                        <p class="error-message text-center" style="color: red; font-size: 13px;"></p>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-center">
                <button type="submit" class="site-btn mt-3">Đăng ký</button>
            </div>
        </form>

        <div class="text-center mt-3">
            <p>Bạn đã có tài khoản? <a asp-action="Login" asp-controller="Login">Đăng nhập ngay</a></p>
        </div>
    </div>
</div>

<style>
    .toggle-password {
        outline: none !important;
        box-shadow: none !important;
        border-color: #e1e1e1 !important;
    }

    #confirmPasswordField:focus,
    .toggle-password:focus {
        outline: none !important;
        box-shadow: none !important;
        border-color: #e1e1e1 !important;
    }

    #passwordField:focus,
    .toggle-password:focus {
        outline: none !important;
        box-shadow: none !important;
        border-color: #e1e1e1 !important;
    }
</style>

@section Scripts {
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form");

        // Hiển thị lỗi
        function showError(input, message) {
            let errorElement = input.closest(".form-group").querySelector(".error-message");
            if (errorElement) {
                errorElement.textContent = message;
            }
        }

        // Xóa lỗi khi người dùng nhập lại đúng
        function clearError(input) {
            let errorElement = input.closest(".form-group").querySelector(".error-message");
            if (errorElement) {
                errorElement.textContent = "";
            }
        }

        // Kiểm tra từng input khi nhập
        function validateInput(input) {
            let isValid = true;

            const phoneRegex = /^0[0-9]{9}$/;
            const emailRegex = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@@#$%^&*]).{8,32}$/;

            const name = document.querySelector("[name='Name']").value.trim();
            const password = document.querySelector("[name='Password']").value;
            const confirmPassword = document.querySelector("[name='ConfirmPassword']").value;
            const email = document.querySelector("[name='Email']").value.trim();
            const phone = document.querySelector("[name='PhoneNumber']").value.trim();
            const username = document.querySelector("[name='Username']").value.trim();

            switch (input.name) {
                case "Name":
                    if (name === "") {
                        showError(input, "Tên không được để trống.");
                        isValid = false;
                    } else if (name.length > 50) {
                        showError(input, "Tên không được vượt quá 50 ký tự.");
                        isValid = false;
                    } else {
                        clearError(input);
                    }
                    break;
                case "Address":
                    if (input.value.trim().length > 100) {
                        showError(input, "Địa chỉ không được vượt quá 100 ký tự.");
                        isValid = false;
                    } else {
                        clearError(input);
                    }
                    break;
                case "PhoneNumber":
                    if (phone !== "" && !phoneRegex.test(phone)) {
                        showError(input, "Số điện thoại phải bắt đầu bằng 0 và có đủ 10 chữ số.");
                        isValid = false;
                    } else {
                        clearError(input);
                    }
                    break;
                case "Email":
                    if (email !== "" && !emailRegex.test(email)) {
                        showError(input, "Email không hợp lệ.");
                        isValid = false;
                    } else {
                        clearError(input);
                    }
                    break;
                case "Username":
                    if (username === "") {
                        showError(input, "Tên đăng nhập không được để trống.");
                        isValid = false;
                    } else if (username.length < 3 || username.length > 20) {
                        showError(input, "Tên đăng nhập phải từ 3 đến 20 ký tự.");
                        isValid = false;
                    } else if (!/^[a-zA-Z0-9]+$/.test(username)) {
                        showError(input, "Tên đăng nhập chỉ được chứa chữ cái không dấu và số.");
                        isValid = false;
                    } else {
                        clearError(input);
                    }
                    break;
                case "Password":
                    if (password === "") {
                        showError(input, "Mật khẩu không được để trống.");
                        isValid = false;
                    } else if (!passwordRegex.test(password)) {
                        showError(input, "Mật khẩu phải từ 8–32 ký tự, bao gồm chữ hoa, chữ thường, số và ký tự đặc biệt.");
                        isValid = false;
                    } else {
                        clearError(input);
                    }
                    break;
                case "ConfirmPassword":
                    if (confirmPassword !== password) {
                        showError(input, "Mật khẩu nhập lại không khớp.");
                        isValid = false;
                    } else {
                        clearError(input);
                    }
                    break;
            }

            return isValid;
        }

        // Gán sự kiện `input` cho từng ô nhập liệu
        document.querySelectorAll("input").forEach(input => {
            input.addEventListener("input", function () {
                validateInput(input);
            });
        });

        // Kiểm tra lỗi khi submit form
        form.addEventListener("submit", function (event) {
            let isValid = true;

            document.querySelectorAll("input").forEach(input => {
                const valid = validateInput(input);
                if (!valid) {
                    isValid = false;
                }
            });

            if (!isValid) {
                event.preventDefault(); // Ngăn form submit nếu có lỗi
            }
        });

        // Hiện/ẩn mật khẩu
        document.querySelectorAll(".toggle-password").forEach(button => {
            button.addEventListener("click", function () {
                const target = document.querySelector(this.getAttribute("data-target"));
                if (target.type === "password") {
                    target.type = "text";
                    this.querySelector("i").classList.remove("fa-eye");
                    this.querySelector("i").classList.add("fa-eye-slash");
                } else {
                    target.type = "password";
                    this.querySelector("i").classList.remove("fa-eye-slash");
                    this.querySelector("i").classList.add("fa-eye");
                }
            });
        });
    });
    </script>
}
