@model List<Project.MvcModule.Models.CommentsViewModel>

@{
    var totalCount = Model?.Count ?? 0;
    var initialCount = 4;
}

<style>
    .review {
        border-bottom: 1px solid #eee;
        padding: 16px 0;
    }

    .review-header {
        font-size: 14px;
        color: #555;
        margin-bottom: 6px;
    }

    .review-author {
        font-weight: bold;
    }

    .review-content {
        font-size: 15px;
        margin: 6px 0;
    }

    .seller-response {
        background-color: #f9f9f9;
        border-left: 4px solid #c0c0c0;
        padding: 10px;
        font-size: 14px;
        color: #333;
        margin-top: 8px;
    }

    #show-more {
        margin-top: 10px;
        padding: 8px 12px;
        background-color: #e1e1e1;
        border: none;
        cursor: pointer;
        font-size: 14px;
    }

    .add-review {
        margin-bottom: 20px;
    }

    #comment-input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 14px;
        resize: vertical;
        margin-bottom: 10px;
    }

    #submit-comment {
        padding: 8px 16px;
        background-color: #ca1515;
        color: white;
        border: none;
        cursor: pointer;
        font-size: 14px;
        border-radius: 4px;
        font-weight: bold;
    }

        #submit-comment:hover {
            background-color: #ca1200;
        }
</style>

<div class="add-review">
    <h6>Thêm đánh giá của bạn</h6>
    <textarea id="comment-input" placeholder="Nhập đánh giá..." rows="4"></textarea>
    <button id="submit-comment" onclick="submitComment()">Gửi đánh giá</button>
</div>

<hr />

<div id="review-list">
    @Html.Partial("~/Views/CommentList/_CommentItemsPartial.cshtml", Model)
</div>

@if ((Model?.Count ?? 0) >= 4)
{
    <button id="show-more" data-current-page="1" onclick="loadMoreComments()">Xem thêm</button>
}

<script>
    //Load comment
    async function loadMoreComments() {
        const button = document.getElementById("show-more");
        let currentPage = parseInt(button.getAttribute("data-current-page")) + 1;
        const productId = '@ViewBag.ProductId';

        const response = await fetch(`/api/Comment/LoadMoreComments?productId=${productId}&page=${currentPage}`);
        if (!response.ok) {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi hệ thống!',
                text: 'Đã xảy ra lỗi khi tải thêm đánh giá. Vui lòng thử lại sau.',
                confirmButtonText: 'Đóng'
            });
            return;
        }

        const html = await response.text();
        document.getElementById("review-list").insertAdjacentHTML("beforeend", html);

        button.setAttribute("data-current-page", currentPage);

        // Nếu số lượng trả về ít hơn 4 => ẩn nút
        const temp = document.createElement("div");
        temp.innerHTML = html;
        if (temp.querySelectorAll(".review").length < 4) {
            button.style.display = "none";
        }
    }


    //Add comment
    async function submitComment() {
        const input = document.getElementById('comment-input');
        const message = input.value.trim();

        const productId = '@ViewBag.ProductId';

        try {
            const response = await fetch('/api/comment/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    ObjectId: productId,
                    Message: message
                })
            });

            const result = await response.json();

            if (!response.ok) {
                Swal.fire({
                    icon: 'error',
                    title: 'Không thể gửi đánh giá!',
                    text: result.message || 'Có lỗi xảy ra khi gửi đánh giá.',
                    confirmButtonText: 'Đóng'
                });
                return;
            }

            Swal.fire({
                icon: 'success',
                title: 'Đã gửi đánh giá!',
                text: result.message,
                confirmButtonText: 'OK'
            });

            input.value = '';

        } catch (error) {
            console.error(error);
            Swal.fire({
                icon: 'error',
                title: 'Lỗi hệ thống!',
                text: 'Đã xảy ra lỗi khi gửi đánh giá. Vui lòng thử lại sau.',
                confirmButtonText: 'Đóng'
            });
        }
    }
</script>